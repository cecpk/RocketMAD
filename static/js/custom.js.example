$(function () {
    'use strict'

    /* Settings. */
    const showStartLocationMarker = true // Show a marker on the map's start location. Default: true.
    const isStartLocationMarkerMovable = true // Let the user move the start location marker around. Default: true.
    const showUserLocationMarker = true // Show a marker on the visitor's location. Default: true.

    const upscalePokemon = false // Enable upscaling of certain Pokemon (upscaledPokemon and notify list). Default: false.
    const upscaledPokemon = [] // Add PokÃ©mon IDs separated by commas (e.g. [1, 2, 3]) to upscale icons. Default: [].

    const twelveHourTime = false // Use 12-hour clock.

    const showGymFilter = true // Show gym filter on nav bar.
    const showRaidFilter = true // Show raid filter on nav bar.

    // Google Analytics property ID. Leave empty to disable.
    // Looks like 'UA-XXXXX-Y'.
    const analyticsKey = ''

    // Hide Presets
    const hidepresets= [
     {
       PokemonID: 10,
       Name: "Bug Types Only",
       Searchstring: ['Bug'],
       Invert: false
     },
     {
       PokemonID: 198,
       Name: "Dark Types Only",
       Searchstring: ['Dark'],
       Invert: false
     },
     {
       PokemonID: 149,
       Name: "Dragon Types Only",
       Searchstring: ['Dragon'],
       Invert: false
     },
     {
       PokemonID: 25,
       Name: "Electric Types Only",
       Searchstring: ['Electric'],
       Invert: false
     },
     {
       PokemonID: 35,
       Name: "Fairy Types Only",
       Searchstring: ['Fairy'],
       Invert: false
     },
     {
       PokemonID: 66,
       Name: "Fighting Types Only",
       Searchstring: ['Fighting'],
       Invert: false
     },
     {
       PokemonID: 4,
       Name: "Fire Types Only",
       Searchstring: ['Fire'],
       Invert: false
     },
     {
       PokemonID: 12,
       Name: "Flying Types Only",
       Searchstring: ['Flying'],
       Invert: false
     },
     {
       PokemonID: 92,
       Name: "Ghost Types Only",
       Searchstring: ['Ghost'],
       Invert: false
     },
     {
       PokemonID: 1,
       Name: "Grass Types Only",
       Searchstring: ['Grass'],
       Invert: false
     },
     {
       PokemonID: 50,
       Name: "Ground Types Only",
       Searchstring: ['Ground'],
       Invert: false
     },
     {
       PokemonID: 364,
       Name: "Ice Types Only",
       Searchstring: ['Ice'],
       Invert: false
     },
     {
       PokemonID: 16,
       Name: "Normal Types Only",
       Searchstring: ['Normal'],
       Invert: false
     },
     {
       PokemonID: 29,
       Name: "Poison Types Only",
       Searchstring: ['Poison'],
       Invert: false
     }, 
     {
       PokemonID: 63,
       Name: "Psychic Types Only",
       Searchstring: ['Psychic'],
       Invert: false
     },
     {
       PokemonID: 74,
       Name: "Rock Types Only",
       Searchstring: ['Rock'],
       Invert: false
     },
     {
       PokemonID: 208,
       Name: "Steel Types Only",
       Searchstring: ['Steel'],
       Invert: false
     },
     {
       PokemonID: 230,
       Name: "Water Types Only",
       Searchstring: ['Water'],
       Invert: false
     },
     {
       PokemonID: 1,
       Name: "Generation 1 Only",
       Searchstring: ['gen1'],
       Invert: false
     },
     {
       PokemonID: 152,
       Name: "Generation 2 Only",
       Searchstring: ['gen2'],
       Invert: false
     },
     {
       PokemonID: 252,
       Name: "Generation 3 Only",
       Searchstring: ['gen3'],
       Invert: false
     },
     {
       PokemonID: 387,
       Name: "Generation 4 Only",
       Searchstring: ['gen4'],
       Invert: false
     },
     {
       PokemonID: 495,
       Name: "Generation 5 Only",
       Searchstring: ['gen5'],
       Invert: false
     }
    ]


    // MOTD.
    const motdEnabled = false
    const motdTitle = 'MOTD'
    const motd = 'Hi there! This is an easily customizable MOTD with optional title!'

    // Only show every unique MOTD message once. If disabled, the MOTD will be
    // shown on every visit. Requires support for localStorage.
    // Updating only the MOTD title (and not the text) will not make the MOTD
    // appear again.
    const motdShowOnlyOnce = true

    // What pages should the MOTD be shown on? By default, homepage and mobile
    // pages.
    const motdShowOnPages = [
        '/',
        '/mobile'
    ]

    // Clustering! Different zoom levels for desktop vs mobile.
    const disableClusters = false // Default: false.
    const maxClusterZoomLevel = 14 // Default: 14.
    const maxClusterZoomLevelMobile = 14 // Default: 14.
    const clusterZoomOnClick = false // Default: false.
    const clusterZoomOnClickMobile = false // Default: 14.
    const clusterGridSize = 60 // Default: 60.
    const clusterGridSizeMobile = 60 // Default: 60.

    // Rarities Sprites
    const rarityCommon = 12 // Default: 1.
    const rarityUncommon = 20 // Default: 1.
    const rarityRare = 100 // Default: 1.
    const rarityVeryRare = 147 // Default: 1.
    const rarityUltraRare = 149 // Default: 1.
    const rarityNewSpawn = 151 // Default: 1.

    /* Feature detection. */

    const hasStorage = (function () {
        var mod = 'RocketMap'
        try {
            localStorage.setItem(mod, mod)
            localStorage.removeItem(mod)
            return true
        } catch (exception) {
            return false
        }
    }())


    /* Do stuff. */

    const currentPage = window.location.pathname
	// Marker cluster might have loaded before custom.js.
    const isMarkerClusterLoaded = typeof window.markerCluster !== 'undefined' && !!window.markerCluster

    // Set custom Store values.
    Store.set('maxClusterZoomLevel', maxClusterZoomLevel)
    Store.set('clusterZoomOnClick', clusterZoomOnClick)
    Store.set('clusterGridSize', clusterGridSize)
    Store.set('upscalePokemon', upscalePokemon)
    Store.set('upscaledPokemon', upscaledPokemon)
    Store.set('showStartLocationMarker', showStartLocationMarker)
    Store.set('isStartLocationMarkerMovable', isStartLocationMarkerMovable)
    Store.set('showLocationMarker', showUserLocationMarker)
    Store.set('hidepresets', hidepresets)
    Store.set('twelveHourTime', twelveHourTime)
    Store.set('showGymFilter', showGymFilter)
    Store.set('showRaidFilter', showRaidFilter)

    // Set rarities sprites
    Store.set('rarityCommon', rarityCommon)
    Store.set('rarityUncommon', rarityUncommon)
    Store.set('rarityRare', rarityRare)
    Store.set('rarityVeryRare', rarityVeryRare)
    Store.set('rarityUltraRare', rarityUltraRare)
    Store.set('rarityNewSpawn', rarityNewSpawn)

    if (typeof window.orientation !== 'undefined' || isMobileDevice()) {
        Store.set('maxClusterZoomLevel', maxClusterZoomLevelMobile)
        Store.set('clusterZoomOnClick', clusterZoomOnClickMobile)
        Store.set('clusterGridSize', clusterGridSizeMobile)
    }

    if (disableClusters) {
        Store.set('maxClusterZoomLevel', -1)
    }

    // Google Analytics.
    if (analyticsKey.length > 0) {
        window.ga = window.ga || function () {
            (ga.q = ga.q || []).push(arguments)
        }
        ga.l = Date.now
        ga('create', analyticsKey, 'auto')
        ga('send', 'pageview')
    }

    // Show MOTD.
    if (motdEnabled && motdShowOnPages.indexOf(currentPage) !== -1) {
        let motdIsUpdated = true

        if (hasStorage) {
            const lastMOTD = window.localStorage.getItem('lastMOTD') || ''

            if (lastMOTD === motd) {
                motdIsUpdated = false
            }
        }

        if (motdIsUpdated || !motdShowOnlyOnce) {
            window.localStorage.setItem('lastMOTD', motd)

            swal({
                title: motdTitle,
                text: motd
            })
        }
    }
})
