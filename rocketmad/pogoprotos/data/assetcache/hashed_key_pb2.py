# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pogoprotos/data/assetcache/hashed_key.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='pogoprotos/data/assetcache/hashed_key.proto',
  package='pogoprotos.data.assetcache',
  syntax='proto3',
  serialized_pb=_b('\n+pogoprotos/data/assetcache/hashed_key.proto\x12\x1apogoprotos.data.assetcache\"#\n\tHashedKey\x12\x16\n\x0ehashed_key_raw\x18\x01 \x01(\tb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_HASHEDKEY = _descriptor.Descriptor(
  name='HashedKey',
  full_name='pogoprotos.data.assetcache.HashedKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hashed_key_raw', full_name='pogoprotos.data.assetcache.HashedKey.hashed_key_raw', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=110,
)

DESCRIPTOR.message_types_by_name['HashedKey'] = _HASHEDKEY

HashedKey = _reflection.GeneratedProtocolMessageType('HashedKey', (_message.Message,), dict(
  DESCRIPTOR = _HASHEDKEY,
  __module__ = 'pogoprotos.data.assetcache.hashed_key_pb2'
  # @@protoc_insertion_point(class_scope:pogoprotos.data.assetcache.HashedKey)
  ))
_sym_db.RegisterMessage(HashedKey)


# @@protoc_insertion_point(module_scope)
